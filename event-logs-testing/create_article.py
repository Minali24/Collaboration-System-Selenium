import unittest
from selenium import webdriver
import requests
from decouple import config
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class test(unittest.TestCase):

    def setUp(self):
        print("Note that user should be a member of community that you select.")
        self.user = config("EVENT_LOGS_USER")
        self.pwd = config("EVENT_LOGS_PASSWORD")
        self.url_basic = "http://" + config("IP_ADDRESS") + ":" + config("EVENT_LOGS_PORT") + "/"
        self.token = config("EVENT_API_TOKEN")  #This should be generated by tester
        self.headers={'Authorization': 'Token ' + str(self.token)}
        self.community_id = config("EVENT_LOGS_COMMUNITY_ID")
        self.article_name = "Event logs Article"

    def test_article_create(self):
        self.driver = webdriver.Remote(command_executor='http://'+config('DOCKER_IP')+':'+config('DOCKER_PORT')+'/wd/hub',desired_capabilities=DesiredCapabilities.FIREFOX)#,browser_profile=profile)        driver.maximize_window()  # For maximizing window
        driver = self.driver
        driver.get(self.url_basic)
        driver.find_element_by_xpath('//a [@href="/login/?next=/"]').click()
        elem = driver.find_element_by_id("id_username")
        elem.send_keys(self.user)
        elem = driver.find_element_by_id("id_password")
        elem.send_keys(self.pwd)
        driver.find_element_by_class_name('btn-block').click()

        url_api = self.url_basic + 'logapi/event/article/create/'
        result = requests.get(url_api, headers = self.headers).json()
        new_result={}
        for key,value in result.iteritems():
            new_result[key.lower()] = value
        if(new_result["status code"] == 200):
            data = new_result["result"]
            total_hits = new_result["total hits"]
            
        print (">>>>>>>>>>>>>total_hits>>>>>>>>>>>", total_hits)
        
        driver.find_element_by_xpath('//a [@href="/communities/"]').click()
        driver.find_element_by_xpath('//a [@href="/community-view/' +  self.community_id + '/"]').click()
        driver.find_element_by_xpath("//button [@type='button' and @data-target='#modalCreate']").click()
        driver.find_element_by_xpath("//button [@type='button' and @data-target='#modalCreateArticle']").click()
        driver.find_element_by_id("exampleCheck1").click()
        driver.find_element_by_id("articleCreate").click()
        title = driver.find_element_by_id("title")
        title.send_keys(self.article_name)
        driver.find_element_by_id("create").click()
        url_api = self.url_basic + 'logapi/event/article/create/'
        result = requests.get(url_api, headers = self.headers).json()
        new_result={}
        for key,value in result.iteritems():
            new_result[key.lower()] = value
        if (new_result["status code"] == 200):
            data = new_result["result"]
            print (">>>>>>>>>>>>>>>>new_result['total hits']>>>>>>>>>>>>>", new_result["total hits"])
            if (new_result["total hits"] == total_hits+ 1):
                self.assertEqual(data[0]["event_name"], "event.article.create")
                self.assertEqual(data[0]["event"]["community-id"], self.community_id)
            else:
                self.assertFalse(True)
        # Extracting the article id
        var = driver.current_url
        article_id = var.split("/")[-2]
        f = open(".env","a")
        f.write("\nEVENT_LOGS_ARTICLE_ID="+article_id)
        f.close()
	
        driver.quit()

if __name__ == '__main__':
    unittest.main()
